# Â© 2023 SolarWinds Worldwide, LLC. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at:http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.

name: Publish to PyPi and Create Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Semantic version of release (e.g. 1.0.0)'
        required: true

env:
  RELEASE_NAME: rel-${{ github.event.inputs.version }}

jobs:
  is_publishable:
    name: Check if version valid
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Check version
      run: cd .github/scripts && ./is_publishable.sh ${{ github.event.inputs.version }}

  build_publish_and_release:
    name: Build and publish to PyPI
    needs: is_publishable
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/actions/package_solarwinds_apm
    - name: Install Twine
      run: pip install --upgrade --no-cache-dir --prefer-binary twine
    - name: Check distribution artifacts
      run: twine check dist/*
    - name: Publish to PyPi
      env:
        TWINE_NON_INTERACTIVE: 1
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.SW_APM_PYPI_UPLOAD_TOKEN }}
      run: twine upload dist/*
  
  create_release:
    name: Create draft release
    needs: build_publish_and_release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Initialize git
      run: |
       git config user.name "GitHub Actions"
       git config user.email noreply@github.com
    - name: Create draft release
      run: gh release create ${{ env.RELEASE_NAME }} --title "${{ env.RELEASE_NAME }}" --target release/${{ env.RELEASE_NAME }} --draft
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
