name: Verify Installation

on:
  workflow_dispatch:
    inputs:
      install-registry:
        required: true
        description: 'Registry used for install tests, e.g. pypi, testpypi, packagecloud'
        type: choice
        default: 'pypi'
        options:
        - pypi
        - packagecloud
        - testpypi
      solarwinds-version:
        required: false
        description: 'Optional solarwinds-apm version, e.g. 0.0.3.2'

env:
  SOLARWINDS_APM_VERSION: ${{ github.event.inputs.solarwinds-version }}

jobs:
  py36_install_centos8:
    runs-on: ubuntu-latest
    container:
      image: centos:8
      options: --hostname py3.6-centos8
    steps:
    - uses: actions/checkout@v2
    - name: Setup and run install test
      working-directory: ./tests/docker/install
      run: ./_helper_run_install_tests.sh
      shell: bash
      env:
        MODE: ${{ github.event.inputs.install-registry }}
  py37_install_debian10:
    runs-on: ubuntu-latest
    container:
      image: python:3.7-buster
      options: --hostname py3.7-debian10
    steps:
    - uses: actions/checkout@v2
    - name: Setup and run install test
      working-directory: ./tests/docker/install
      run: ./_helper_run_install_tests.sh
      shell: bash
      env:
        MODE: ${{ github.event.inputs.install-registry }}
  py38_install_alpine313:
    runs-on: ubuntu-latest
    container:
      image: python:3.8-alpine3.13
      options: --hostname py3.8-alpine3.13
    steps:
    - uses: actions/checkout@v2
    - name: Install bash and Python
      run: |
        apk add bash python3-dev g++ make
    - name: Setup and run install test
      working-directory: ./tests/docker/install
      run: ./_helper_run_install_tests.sh
      shell: bash
      env:
        MODE: ${{ github.event.inputs.install-registry }}
