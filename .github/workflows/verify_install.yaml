name: Verify Installation

on:
  workflow_dispatch:
    inputs: 
      solarwinds-version:
        required: false
        description: 'Optional solarwinds-apm version (e.g. 0.0.3.2)'

env:
  SOLARWINDS_APM_VERSION: ${{ github.event.inputs.solarwinds-version }}

jobs:
  py36_install_centos8_testpypi:
    runs-on: ubuntu-latest
    container:
      image: centos:8
      options: --hostname py3.6-centos8
    steps:
    - uses: actions/checkout@v2
    - name: Setup and run install test
      working-directory: ./tests/docker/install
      run: ./_helper_run_install_tests.sh
      shell: bash
      env:
        MODE: testpypi
    - name: Install test app dependencies
      run: pip install flask requests
    - name: Run instrumented server and client - staging
      working-directory: .github/utils
      run: opentelemetry-instrument flask run && python client.py
      env:
        FLASK_RUN_HOST: 0.0.0.0
        FLASK_RUN_PORT: 8001
        OTEL_PYTHON_DISABLED_INSTRUMENTATIONS: urllib3
        SW_APM_DEBUG_LEVEL: 6
        SW_APM_SERVICE_KEY: ${{ secrets.SW_APM_SERVICE_KEY_STAGING }}-py3.6-centos8
        SW_APM_COLLECTOR: ${{ secrets.SW_APM_COLLECTOR_STAGING }}
    - name: Run instrumented server and client - prod
      working-directory: .github/utils
      run: opentelemetry-instrument flask run && python client.py
      env:
        FLASK_RUN_HOST: 0.0.0.0
        FLASK_RUN_PORT: 8002
        OTEL_PYTHON_DISABLED_INSTRUMENTATIONS: urllib3
        SW_APM_DEBUG_LEVEL: 6
        SW_APM_SERVICE_KEY: ${{ secrets.SW_APM_SERVICE_KEY_PROD }}-py3.6-centos8
        SW_APM_COLLECTOR: ${{ secrets.SW_APM_COLLECTOR_PROD }}
  py37_install_debian10_packagecloud:
    runs-on: ubuntu-latest
    container:
      image: python:3.7-buster
      options: --hostname py3.7-debian10
    steps:
    - uses: actions/checkout@v2
    - name: Setup and run install test
      working-directory: ./tests/docker/install
      run: ./_helper_run_install_tests.sh
      shell: bash
      env:
        MODE: packagecloud
  py38_install_alpine313_testpypi:
    runs-on: ubuntu-latest
    container:
      image: python:3.8-alpine3.13
      options: --hostname py3.8-alpine3.13
    steps:
    - uses: actions/checkout@v2
    - name: Install bash and Python
      run: |
        apk add bash python3-dev g++ make
    - name: Setup and run install test
      working-directory: ./tests/docker/install
      run: ./_helper_run_install_tests.sh
      shell: bash
      env:
        MODE: testpypi
